name: Build manywheel docker images

on:
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * *

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check version
        run: |
          version=$(curl -s "https://api.github.com/repos/microsoft/onnxruntime/releases/latest" | jq -r .tag_name)
          if [ -z "${version}" ] || [ "${version}" == "null" ]; then
            echo "Failed to get version"
            exit 1
          fi

          echo "version=${version}" >> $GITHUB_ENV
          echo ""
          echo "========== Build Args =========="
          echo "onnxruntime version: ${version}"

      - name: Check release
        run: |
          gh release view ${version} -R ${{ github.repository }} >/dev/null 2>&1 || echo "build=1" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v4
        if: env.build == '1'
      - uses: docker/setup-qemu-action@v3
        if: env.build == '1'
      - uses: docker/setup-buildx-action@v3
        if: env.build == '1'

      - name: Generate files
        if: env.build == '1'
        run: |
          mkdir -p tools/ci_build/github/linux/docker/scripts
          cd tools/ci_build/github/linux/docker/scripts
          wget -q https://github.com/microsoft/onnxruntime/raw/refs/tags/${version}/cmake/deps.txt
          wget -q https://github.com/microsoft/onnxruntime/raw/refs/tags/${version}/tools/ci_build/github/linux/docker/inference/aarch64/python/cpu/scripts/requirements.txt
          wget -q https://github.com/microsoft/onnxruntime/raw/refs/tags/${version}/tools/ci_build/github/linux/docker/inference/aarch64/python/cpu/scripts/install_centos.sh
          wget -q https://github.com/microsoft/onnxruntime/raw/refs/tags/${version}/tools/ci_build/github/linux/docker/inference/aarch64/python/cpu/scripts/install_deps.sh
          wget -q https://github.com/microsoft/onnxruntime/raw/refs/tags/${version}/tools/ci_build/github/linux/docker/inference/aarch64/python/cpu/scripts/install_protobuf.sh
          sed -i 's/redhat-lsb-core//g' install_centos.sh
          sed -i 's/redhat-release/anolis-release/g' install_centos.sh
          sed -i 's@ "/opt/python/cp313-cp313t/bin/python3.13"@@g' install_deps.sh
          sed -i 's@DISTRIBUTOR=.*@DISTRIBUTOR=CentOS@g' install_protobuf.sh
          chmod +x *.sh

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        if: env.build == '1'
        uses: docker/build-push-action@v6
        with:
          context: tools/ci_build/github/linux/docker/
          platforms: linux/loong64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/onnxruntimecpubuildpythonloongarch64:${{ env.version }}

      - name: Create tag
        if: env.build == '1'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Update to ${version}" || true
          git tag ${version} || true
          git push origin ${version} || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          repository: ${{ github.repository }}
          tag_name: ${{ env.version }}